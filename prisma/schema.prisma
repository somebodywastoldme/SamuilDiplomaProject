// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id            Int        @id @default(autoincrement())
  email         String     @unique
  password      String
  name          String
  surname       String
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  cards         Card[]
  sentCards     SentCard[] @relation("Sender")
  receivedCards SentCard[] @relation("Recipient")
  role          Role?      @relation(fields: [roleId], references: [id])
  roleId        Int?
}

model Role {
  id          Int          @id @default(autoincrement())
  name        String
  permissions Permission[]
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  User        User[]
}

model Permission {
  id        Int      @id @default(autoincrement())
  name      String
  roles     Role[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Card {
  id        Int        @id @default(autoincrement())
  user      User       @relation(fields: [userId], references: [id])
  userId    Int
  documents Document[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  SentCard  SentCard[]
}

model Document {
  id          Int      @id @default(autoincrement())
  fileName    String
  description String?
  fileBody    Bytes
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  card        Card     @relation(fields: [cardId], references: [id])
  cardId      Int
}

model SendingType {
  id       Int        @id @default(autoincrement())
  name     String
  SentCard SentCard[]
}

model SentCard {
  id            Int         @id @default(autoincrement())
  sender        User        @relation("Sender", fields: [senderId], references: [id])
  senderId      Int
  recipient     User        @relation("Recipient", fields: [recipientId], references: [id])
  recipientId   Int
  card          Card        @relation(fields: [cardId], references: [id])
  cardId        Int
  sendingType   SendingType @relation(fields: [sendingTypeId], references: [id])
  sendingTypeId Int
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
}
